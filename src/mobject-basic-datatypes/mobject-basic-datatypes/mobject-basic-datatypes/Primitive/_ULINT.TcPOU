<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ULINT" Id="{ffe5859b-ef46-05bc-36a7-732dc3a25b2e}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ULINT EXTENDS NumericDatatypeBase
VAR
	localData : ULINT;
	activeData : REFERENCE TO ULINT REF= localData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{e52c06c5-c92b-0354-22f8-1da03a33aaff}" />
    <Folder Name="Protected" Id="{015f20a3-2c1b-0965-03ab-ca39ba5df224}" />
    <Property Name="Address" Id="{c0e1d138-4876-0997-02d0-e0b39d19c91c}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{f24b24fa-8b1a-039a-2a08-2ec4eac8d90d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{03bd0c27-fa0c-0e9d-22e0-4779998be7c7}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{871f4887-9723-0f4d-07a1-2c7c472a1a36}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ULINT(InitialValue := Value));
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{133cedcd-b193-0973-25ad-66022abde12d}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsFloat" Id="{b82c6a2c-69d4-025f-30ca-8009d3c27ddd}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsFloat : BOOL]]></Declaration>
      <Get Name="Get" Id="{679c90b2-4a4a-08fc-15d3-c56b0ae30d3b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsFloat := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="IsSigned" Id="{74ffe30a-6748-09a5-364c-1a5e86ecacc4}">
      <Declaration><![CDATA[PROPERTY PUBLIC IsSigned : BOOL]]></Declaration>
      <Get Name="Get" Id="{bfd9d2a0-dd04-0573-34d2-37f61f027ecb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsSigned := FALSE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{546f53e9-bcfc-0361-1e58-22851df77222}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;]]></ST>
      </Implementation>
    </Method>
    <Property Name="MaxValue" Id="{aa968b32-676f-00cb-1c47-19124d0a68e7}">
      <Declaration><![CDATA[PROPERTY PUBLIC MaxValue : ULINT]]></Declaration>
      <Get Name="Get" Id="{843898d8-4509-0a1c-22f8-9e192b3c2810}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MaxValue :=  DatatypeLimits.ULINT_MAX_VALUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MinValue" Id="{4cc801a2-bdce-0872-06f5-8189ac9a2f92}">
      <Declaration><![CDATA[PROPERTY PUBLIC MinValue : ULINT]]></Declaration>
      <Get Name="Get" Id="{ae88aa0e-00ef-07dd-2d59-231dfc894ea1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MinValue := DatatypeLimits.ULINT_MIN_VALUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SerializeMaxValue" Id="{d7e7f1c5-73a5-0f16-0fae-7796a6673869}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeMaxValue
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(MaxValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeMinValue" Id="{79bcb22e-f58f-0039-2612-5ea617ddb3a6}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SerializeMinValue
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(MinValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeWith" Id="{ed514a5c-b5e2-0c18-2a8b-21cf4a07fbaa}">
      <Declaration><![CDATA[METHOD PUBLIC SerializeWith
VAR_INPUT
	Serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Serializer.AddUlint(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{8a03cdd9-4bc8-0011-0232-5b3217c6c2fd}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{c41f5a6b-548f-0af0-1910-d3ca5c99ca15}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeFrom" Id="{8369d3c7-fe9b-0f55-2766-ed3dfa014fa8}">
      <Declaration><![CDATA[METHOD TryDeserializeFrom : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryDeserializeFrom := Deserializer.TryGetUlint(activeData, Feedback);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{bcf585e1-9fc0-0921-319c-1cdf393a89e1}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT (Target.TypeName = TypeName) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="TypeName" Id="{bfc7bfbf-7e27-0769-0ccb-39e58442f06b}">
      <Declaration><![CDATA[PROPERTY PUBLIC TypeName : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{a7afb3d6-22de-082c-0522-a12ef87c4f0a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TypeName := 'ULINT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{9a36ecbf-09d6-02a0-11b1-c3c15cd2311d}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ULINT]]></Declaration>
      <Get Name="Get" Id="{8184c591-b95d-0ae3-287a-a6a87b75073b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d3f9b22a-9c1b-0b16-29aa-3c9ca8fb202b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>